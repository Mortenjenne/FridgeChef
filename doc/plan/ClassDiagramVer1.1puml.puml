@startuml
top to bottom direction

class Main{
+ void start()
}

class AppManager{
- RecipeManager recipeManager
- Account currentUser
- List<Dish> searchResult
- SceneNavigator sceneNavigator
+ AppManager(SceneNavigator sceneNavigator)
+ Boolean login(String email, String password)
+ void logout
+ RecipeManager getRecipeManager()
+ Account getCurrentUser()
+ List<Dish> getDishes()
}

class SceneNavigator{
- Stage currentStage
+ SceneNavigator(Stage stage)
+ void navigateTo(String fxml)
}

class RecipeManager{
- RecipeApiClient apiClient;
- RecipeJsonParser jsonParser;
+ List<Dish> getRecipesByTitle(String ingredients)
+ List<Dish> getRecipesByCuisine(String cuisine)
+ List<Dish> getRecipesByIngredients(List<Ingredient> ingredients)
  }

interface SceneController{
+ void initialize();
+ void handleUserInput();
+ void navigateToNextView();
}

class StartViewController{
- TextField e-Mail
- PasswordField passwordField
- Button loginButton
- Button signUpButton
- Button closeAppButton
- Label welcomeMessage

+ void initialize()
- void login()
- void signUp()
- void closeApp()
}

class DatabaseConnecter{
}
class DatabaseWriter{
}
class DatabaseReader{
}

class CreateAccountViewController{
- TextField e-Mail
- TextField userName
- PasswordField password
- PasswordField passwordConfirmation
- Button returnToStartButton
- Label createAccountMessage
- Label e-MailMessage
- Label userNameMessage
- Label passwordMessage
- Label confirmMessage
- Button createAccountButton

+ void initialize()
- boolean isUserInSystem()
- void createAccount()
}


class MenuViewController{
- Label welcomeText
- Button goToFavoritesButton
- Button goToRecipesButton
- Button goToFridgeButton
- Button closeAppButton
- Button goToMainMenuButton

+ void initialize()
- void goToFavorites()
- void goToRecipes()
- void closeApp()
}


class InstructionViewController{
- ImageView viewWidget
- Button goToMainMenuButton
- Button goToSearchResultButton
- Button addToFavoritesButton
- ImageView viewRecipe
- Label instructions

+ void initialize()
- void addToFavorites()
- void goToSearchResult()
- void closeApp()
}


class SearchViewController{
- Label welcomeText
- Button goToMainMenuButton
- ChoiceBox chooseCuisineBox
- CheckBox isVegeterianBox
- ChoiceBox chooseIngredientOneBox
- ChoiceBox chooseIngredientTwoBox
- ChoiceBox chooseIngredientThreeBox

+ void initialize()
- void searchByIngredient(List<Ingredient> ingredients)
- void searchByCuisine(String cuisine)
- Boolean isVegeterian(Boolean isVegeterian)
}


class ResultViewController{
- ScroolBar viewResultBar

+ void initialize()
- void viewRecipe()
}




class Account{
- String accountName
- String e-Mail
- String password
- List<> favoriteDishes
- Map<Ingredient, Integer amount> ingredients

+ String getAccount()
+ String getPassword()
+ List<Dish> getFavoriteDishes()
+ Map<Ingredient, Integer amount> getIngredients()
+ void addToFavorites(Dish dish)
+ void removeFromFavorites(Dish dish)
+ void addIngredientToFridge(Ingredient ingredient, int amount)
+ void removeIngredientFromFridge(Ingredient ingredient, int amount)
}

class Ingredient{
- String ingredientName
- int amount

+ String toString()
}


class Dish{
- int id
- String title
- String image

+ int id setId()
+ String setTitle()
+ String setImageUrl()
+ int getId()
+ String getTitle()
+ String getImageUrl()
}


class Recipe{
- String recipeDescription
}

class FullRecipe{
- int servings
- cookingTime
- String instructions
- Map<Ingredient, Integer amount> ingredients
}

class RecipeApiClient{
- String apiUrl
- String apiKey
+ void fetchRecipesByTitle(String query)
+ void fetchRecipeByIngredients(List<Ingredient> ingredients)
}

class RecipeJsonParser{
- private Gson gson
+ List<Recipe> parseRecipes(String jsonResponse)
}

class RecipeResponse{
- List<Dish> results
+ List<Recipe> results
+ void setResults(List<Recipe> results)
}


class FavoritesView
class FavoritesViewController
class FridgeView
class FridgeViewController
class StartView
class CreateAccountView
class MenuView
class InstructionView
class SearchView
class ResultView


Main *-- AppManager
AppManager --* SceneNavigator
AppManager --* RecipeManager
AppManager --* Account
Dish <|-- Recipe
Recipe <|-- FullRecipe

Account --* Ingredient
RecipeManager --* Ingredient

RecipeManager --* RecipeApiClient
RecipeApiClient --* RecipeJsonParser
RecipeApiClient --* Dish
RecipeJsonParser --* RecipeResponse
RecipeResponse --* Dish

SceneController <|.. StartViewController
StartView *- StartViewController
StartViewController --* AppManager

SceneController <|.. CreateAccountViewController
CreateAccountView *- CreateAccountViewController

SceneController <|.. MenuViewController
MenuView *- MenuViewController
MenuViewController --* AppManager

SceneController <|.. SearchViewController
SearchView *- SearchViewController
SearchViewController --* AppManager

SceneController <|.. ResultViewController
ResultView *- ResultViewController
ResultViewController --* AppManager

SceneController <|.. InstructionViewController
InstructionView *- InstructionViewController
InstructionViewController --* AppManager

SceneController <|.. FridgeViewController
FridgeView *- FridgeViewController
FridgeViewController --* AppManager

SceneController <|.. FavoritesViewController
FavoritesView *- FavoritesViewController
FavoritesViewController --* AppManager

AppManager --* DatabaseConnecter
DatabaseConnecter --* DatabaseReader
DatabaseConnecter --* DatabaseWriter


@enduml